#:kivy 1.9.1
<SudokuCell>:
    background_color: [2, 2, 2, 1]
    text: ""
    font_size: 0.7 * self.width
    padding: 0.3 * self.width, (self.height - self.line_height) / 2
    input_filter: lambda text, from_undo: text if ( text.isdigit() and len(self.text) == 0 and 0 < int(text) < 10 ) else ""
    multiline: False
    cursor_color: [0, 0, 0, 0]

<SudokuCell4>:
    background_color: [2, 2, 2, 1]
    text: ""
    font_size: 0.7 * self.width
    padding: 0.3 * self.width, (self.height - self.line_height) / 2
    input_filter: lambda text, from_undo: text if ( text.isdigit() and len(self.text) == 0 and 0 < int(text) < 5 ) else ""
    multiline: False
    cursor_color: [0, 0, 0, 0]

<SudokuCell6>:
    background_color: [2, 2, 2, 1]
    text: ""
    font_size: 0.7 * self.width
    padding: 0.3 * self.width, (self.height - self.line_height) / 2
    input_filter: lambda text, from_undo: text if ( text.isdigit() and len(self.text) == 0 and 0 < int(text) < 7 ) else ""
    multiline: False
    cursor_color: [0, 0, 0, 0]


<SudokuGame>:
    canvas.before:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size
    BoxLayout:
        orientation: "vertical"
        size: root.size
        GridLayout:
            id: grid
            rows: 9
            cols: 9
            line_size: 6
            canvas:
                Color:
                    rgb: 0, 0, 0
                Rectangle:
                    pos: self.x + self.width / 3 - self.line_size / 2, self.y
                    size: self.line_size, self.height
                Rectangle:
                    pos: self.x + 2 * self.width / 3 - self.line_size / 2, self.y
                    size: self.line_size, self.height
                Rectangle:
                    pos: self.x, self.y  + self.height / 3 - self.line_size / 2
                    size: self.width, self.line_size
                Rectangle:
                    pos: self.x, self.y  + 2 * self.height / 3 - self.line_size / 2
                    size: self.width, self.line_size
        BoxLayout:
            orientation: "horizontal"
            size_hint: 1, 0.1
            Button:
                text: "Resolver"
                on_press: root.solve()
            Button:
                text: "Otras soluciones"
                on_press: root.other_solutions()
            Button:
                text: "Borrar"
                on_press: root.clear()

<SudokuGame4>:
    canvas.before:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size
    BoxLayout:
        orientation: "vertical"
        size: root.size
        GridLayout:
            id: grid
            rows: 4
            cols: 4
            line_size: 6
            canvas:
                Color:
                    rgb: 0, 0, 0
                Rectangle:
                    pos: self.x + self.width / 2 - self.line_size / 2, self.y
                    size: self.line_size, self.height
                Rectangle:
                    pos: self.x, self.y  + self.height / 2 - self.line_size / 2
                    size: self.width, self.line_size

        BoxLayout:
            orientation: "horizontal"
            size_hint: 1, 0.1
            Button:
                text: "Resolver"
                on_press: root.solve()
            Button:
                text: "Otras soluciones"
                on_press: root.other_solutions()
            Button:
                text: "Borrar"
                on_press: root.clear()


<SudokuGame6>:
    canvas.before:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size
    BoxLayout:
        orientation: "vertical"
        size: root.size
        GridLayout:
            id: grid
            rows: 6
            cols: 6
            line_size: 6
            canvas:
                Color:
                    rgb: 0, 0, 0
                Rectangle:
                    pos: self.x + self.width / 2 - self.line_size / 2, self.y
                    size: self.line_size, self.height
                Rectangle:
                    pos: self.x, self.y  + self.height / 3 - self.line_size / 2
                    size: self.width, self.line_size
                Rectangle:
                    pos: self.x, self.y  + 2 * self.height / 3 - self.line_size / 2
                    size: self.width, self.line_size

        BoxLayout:
            orientation: "horizontal"
            size_hint: 1, 0.1
            Button:
                text: "Resolver"
                on_press: root.solve()
            Button:
                text: "Otras soluciones"
                on_press: root.other_solutions()
            Button:
                text: "Borrar"
                on_press: root.clear()



<ErrorMessage>:
    canvas.before:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            size: self.size
            pos: self.pos
    text: "¡No hay más soluciones!"
    pos_hint: {"center_x": 0.5, "center_y": 0.5}
    size_hint: 0.3, 0.1
    color: 1, 0, 0, 1
    bold: True

<Tiempo>:
    canvas.before:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            size: self.size
            pos: self.pos
    text: root.tiempo
    pos_hint: {"center_x": 0.5, "center_y": 0.5}
    size_hint: 0.3, 0.1
    color: 0, 0, 0, 1
    bold: True